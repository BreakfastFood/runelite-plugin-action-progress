package com.github.calebwhiting.runelite.data;

import lombok.Getter;
import lombok.RequiredArgsConstructor;
import net.runelite.api.gameval.ItemID;

public interface Cooking
{

	@Getter
	@RequiredArgsConstructor
	enum Cookable
	{
		PLAIN_PIZZA(ItemID.UNCOOKED_PIZZA, ItemID.PLAIN_PIZZA),
		SARDINE(ItemID.RAW_SARDINE, ItemID.SARDINE),
		SALMON(ItemID.RAW_SALMON, ItemID.SALMON),
		TROUT(ItemID.RAW_TROUT, ItemID.TROUT),
		COD(ItemID.RAW_COD, ItemID.COD),
		HERRING(ItemID.RAW_HERRING, ItemID.HERRING),
		PIKE(ItemID.RAW_PIKE, ItemID.PIKE),
		MACKEREL(ItemID.RAW_MACKEREL, ItemID.MACKEREL),
		TUNA(new IDs(ItemID.RAW_TUNA), new IDs(ItemID.TUNA)),
		BASS(ItemID.RAW_BASS, ItemID.BASS),
		SWORDFISH(ItemID.RAW_SWORDFISH, ItemID.SWORDFISH),
		LOBSTER(ItemID.RAW_LOBSTER, ItemID.LOBSTER),
		SHARK(new IDs(ItemID.RAW_SHARK), new IDs(ItemID.SHARK)),
		LAVA_EEL(ItemID.RAW_LAVA_EEL, ItemID.LAVA_EEL),
		MANTA_RAY(ItemID.RAW_MANTARAY, ItemID.MANTARAY),
		MONKFISH(new IDs(ItemID.RAW_MONKFISH), new IDs(ItemID.MONKFISH)),
		DARK_CRAB(ItemID.RAW_DARK_CRAB, ItemID.DARK_CRAB),
		ANGLERFISH(ItemID.RAW_ANGLERFISH, ItemID.ANGLERFISH),
		KARAMBWAN(new IDs(ItemID.TBWT_RAW_KARAMBWAN), new IDs(
				ItemID.TBWT_COOKED_KARAMBWAN,
				ItemID.TBWT_POORLY_COOKED_KARAMBWAN
		)),
		SLIMY_EEL(ItemID.MORT_SLIMEY_EEL, ItemID.MORT_SLIMEY_EEL_COOKED),
		RAINBOW_FISH(ItemID.HUNTING_RAW_FISH_SPECIAL, ItemID.HUNTING_FISH_SPECIAL),
		HARPOONFISH(ItemID.TEMPOROSS_RAW_HARPOONFISH, ItemID.TEMPOROSS_HARPOONFISH),
		APPLE_PIE(ItemID.UNCOOKED_APPLE_PIE, ItemID.APPLE_PIE),
		REDBERRY_PIE(ItemID.UNCOOKED_REDBERRY_PIE, ItemID.REDBERRY_PIE),
		MEAT_PIE(ItemID.UNCOOKED_MEAT_PIE, ItemID.MEAT_PIE),
		BOTANICAL_PIE(ItemID.UNCOOKED_BOTANICAL_PIE, ItemID.BOTANICAL_PIE),
		MUSHROOM_PIE(ItemID.UNCOOKED_MUSHROOM_PIE, ItemID.MUSHROOM_PIE),
		DRAGONFRUIT_PIE(ItemID.UNCOOKED_DRAGONFRUIT_PIE, ItemID.DRAGONFRUIT_PIE),
		ADMIRAL_PIE(ItemID.UNCOOKED_ADMIRAL_PIE, ItemID.ADMIRAL_PIE),
		FISH_PIE(ItemID.UNCOOKED_FISH_PIE, ItemID.FISH_PIE),
		GARDEN_PIE(ItemID.UNCOOKED_GARDEN_PIE, ItemID.GARDEN_PIE),
		SUMMER_PIE(ItemID.UNCOOKED_SUMMER_PIE, ItemID.SUMMER_PIE),
		WILD_PIE(ItemID.UNCOOKED_WILD_PIE, ItemID.WILD_PIE),
		UGTHANKI_MEAT(ItemID.RAW_UGTHANKI_MEAT, ItemID.COOKED_UGTHANKI_MEAT),
		THIN_SNAIL(ItemID.SNAIL_CORPSE1, ItemID.SNAIL_CORPSE_COOKED1),
		LEAN_SNAIL(ItemID.SNAIL_CORPSE2, ItemID.SNAIL_CORPSE_COOKED2),
		FAT_SNAIL(ItemID.SNAIL_CORPSE3, ItemID.SNAIL_CORPSE_COOKED3),
		MYSTERY_MEAT(ItemID.RAW_MYSTERY_MEAT, ItemID.COOKED_MYSTERY_MEAT),
		CHICKEN(ItemID.RAW_CHICKEN,	ItemID.COOKED_CHICKEN),
		MEAT(
				new IDs(
						ItemID.RAW_BEEF,
						ItemID.RAW_RAT_MEAT,
						ItemID.RAW_BEAR_MEAT,
						ItemID.YAK_MEAT_RAW
				),
				new IDs(ItemID.COOKED_MEAT)
		),
		WRAPPED_OOMLIE(ItemID.WRAPPED_OOMLIE, ItemID.COOKED_OOMLIE),
		CHOMPY(ItemID.RAW_CHOMPY, ItemID.COOKED_CHOMPY),
		SKEWERED_CHOMPY(ItemID.SPIT_SKEWERED_CHOMPY, ItemID.CHOMPY_COOKED),
		CRAB_MEAT(ItemID.HUNDRED_PIRATE_GIANT_CRAB_MEAT, ItemID.HUNDRED_PIRATE_GIANT_CRAB_MEAT_1),
		JUBBLY(ItemID._100_JUBBLY_MEAT_RAW, ItemID._100_JUBBLY_MEAT_COOKED),
		SKEWERED_BIRD_MEAT(ItemID.SPIT_SKEWERED_BIRD_MEAT, ItemID.SPIT_ROASTED_BIRD_MEAT),
		SKEWERED_BEAST(new IDs(ItemID.SPIT_RAW_BEAST_MEAT, ItemID.SPIT_SKEWERED_BEAST_MEAT), new IDs(ItemID.SPIT_ROASTED_BEAST_MEAT)),
		RABBIT(ItemID.RAW_RABBIT, ItemID.COOKED_RABBIT),
		SKEWERED_RABBIT(ItemID.SPIT_SKEWERED_RABBIT_MEAT, ItemID.SPIT_ROASTED_RABBIT_MEAT),
		SPIDER_ON_STICK(ItemID.TBW_SPIDER_ON_STICK_RAW, ItemID.TBW_SPIDER_ON_STICK_COOKED),
		BAKED_POTATO(ItemID.POTATO, ItemID.POTATO_BAKED),
		SWEETCORN(ItemID.SWEETCORN, ItemID.SWEETCORN_COOKED),
		GIANT_SEAWEED(ItemID.GIANT_SEAWEED, ItemID.SODA_ASH),
		SEAWEED(ItemID.SEAWEED, ItemID.SODA_ASH),
		EDIBLE_SEAWEED(ItemID.EDIBLE_SEAWEED, ItemID.SODA_ASH);

		private final IDs raw;

		private final IDs cooked;

		Cookable(int raw, int cooked)
		{
			this(new IDs(raw), new IDs(cooked));
		}
	}

}